/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.20
 * Generated at: 2024-04-26 06:08:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.day08;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>register.jsp</title>\r\n");
      out.write("<style>\r\n");
      out.write("	* {\r\n");
      out.write("		margin: 0;\r\n");
      out.write("		padding: 0;\r\n");
      out.write("	}\r\n");
      out.write("	h1 {\r\n");
      out.write("		text-align: center;\r\n");
      out.write("		margin: 20px;\r\n");
      out.write("	}\r\n");
      out.write("	span {\r\n");
      out.write("		display: inline-block;\r\n");
      out.write("		width: 150px;\r\n");
      out.write("	}\r\n");
      out.write("	form {\r\n");
      out.write("		margin-left: 50px;\r\n");
      out.write("	}\r\n");
      out.write("	div#button {\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("	window.onload = function() {\r\n");
      out.write("		let frm = document.frm;\r\n");
      out.write("		\r\n");
      out.write("		console.dir(frm);\r\n");
      out.write("		\r\n");
      out.write("		$(\"#btn\").on(\"click\",idCheck);\r\n");
      out.write("		\r\n");
      out.write("		function idCheck(){\r\n");
      out.write("			console.log(\"버튼눌림\");\r\n");
      out.write("			//1. id 값 가져오기\r\n");
      out.write("			//2. 이값에 공백을 제거\r\n");
      out.write("			let txt =$(\"#txt\").val().trim();\r\n");
      out.write("\r\n");
      out.write("			\r\n");
      out.write("			//3. $.ajax({설정값});\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url : \"idCheckup.jsp\",\r\n");
      out.write("				type : \"get\",\r\n");
      out.write("				dataType: \"html\",\r\n");
      out.write("				data : {\"id\":txt}, \r\n");
      out.write("				success : function(response, status, request){\r\n");
      out.write("					console.log(\"성공시 메세지 출력\");\r\n");
      out.write("					console.log(response);					\r\n");
      out.write("				},\r\n");
      out.write("				complete: function(){\r\n");
      out.write("					console.log(\"AJAX 통신 끝\");					\r\n");
      out.write("				}\r\n");
      out.write("			})\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("		\r\n");
      out.write("		frm[7].onclick = function() {\r\n");
      out.write("			console.log(\"유효성 검사\");\r\n");
      out.write("			\r\n");
      out.write("			if (frm[0].value == '') {\r\n");
      out.write("				alert(\"아이디를 입력해주세요\");\r\n");
      out.write("				frm[0].focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if (frm[2].value == '') {\r\n");
      out.write("				alert(\"이름을 입력해주세요\")\r\n");
      out.write("				frm[2].focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if (frm[3].value == '') {\r\n");
      out.write("				alert(\"비밀번호를 입력해주세요\")\r\n");
      out.write("				frm[3].focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if (!frm[4].checked && !frm[4].checked) {\r\n");
      out.write("				alert(\"성별을 선택해주세요\")\r\n");
      out.write("				frm[4].focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			if (frm[6].value == '') {\r\n");
      out.write("				alert(\"가입동기를 작성해주세요\")\r\n");
      out.write("				frm[6].focus();\r\n");
      out.write("				return;\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("			frm.action = \"registerOK.jsp\";\r\n");
      out.write("			frm.method = \"get\";\r\n");
      out.write("			frm.submit();\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	function email(x) {\r\n");
      out.write("		let email2 = document.getElementById(\"email2\");\r\n");
      out.write("		email2.value = (x.value == \"직접입력\") ? \"\" : x.value;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>가입신청서</h1>\r\n");
      out.write("	\r\n");
      out.write("	<form action=\"registerOk.jsp\" name=\"frm\">\r\n");
      out.write("		<span>ID:</span> \r\n");
      out.write("		<input type=\"text\" name=\"id\" id=\"txt\" placeholder=\"id를 입력하세요\" />\r\n");
      out.write("		<input type=\"button\" value=\"중복확인\" id=\"btn\" />\r\n");
      out.write("		<br>\r\n");
      out.write("		\r\n");
      out.write("		<span>NAME:</span> \r\n");
      out.write("		<input type=\"text\" name=\"name\" id=\"\" /> <br>\r\n");
      out.write("		\r\n");
      out.write("		<span>비밀번호:</span> \r\n");
      out.write("		<input type=\"password\" name=\"pw\" id=\"\" placeholder=\"패스워드를 입력하세요\" /> <br>\r\n");
      out.write("			  \r\n");
      out.write("		<span>성별:</span> \r\n");
      out.write("		<input type=\"radio\" name=\"gender\" id=\"\" value=\"남\" />남\r\n");
      out.write("		<input type=\"radio\" name=\"gender\" id=\"\" value=\"여\" />여 <br>\r\n");
      out.write("		\r\n");
      out.write("		<span>가입동기</span> \r\n");
      out.write("		<textarea name=\"motive\" id=\"\" cols=\"80\" rows=\"5\" style=\"resize: none;\" \r\n");
      out.write("			placeholder=\"가입동기를 입력하세요\"></textarea>\r\n");
      out.write("		\r\n");
      out.write("		<div id=\"button\">\r\n");
      out.write("			<!-- 가입버튼을 누르면 현재 입력된 값들이 올바른 값이 검사후에 registerOk.jsp로 전달 -->\r\n");
      out.write("			<input type=\"button\" value=\"가입하기\" />\r\n");
      out.write("			<input type=\"reset\" value=\"취소하기\" />\r\n");
      out.write("		</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
