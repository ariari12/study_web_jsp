package dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import vo.BoardVO;
import vo.DeptVO;

public class BoardDAO {
	private Connection conn;
	private StringBuffer sb = new StringBuffer();
	private ResultSet rs = null;
	private PreparedStatement pstmt = null;
	
	public BoardDAO() {		
		conn = DBConnection.getInstance().getConnection();		
	}
	
	//전체 조회
	public ArrayList<BoardVO> selectAll(){
		sb.setLength(0);
		sb.append("select bno, writer, title, contents, regdate, hits, ip, status ");
		sb.append("from board ");
		ArrayList<BoardVO> list = new ArrayList<>();
		try {
			pstmt=conn.prepareStatement(sb.toString());
			rs=pstmt.executeQuery();
			while(rs.next()) {
				BoardVO vo = new BoardVO();
				vo.setBno(rs.getInt("bno"));
				vo.setWriter(rs.getString("writer"));
				vo.setTitle(rs.getString("title"));
				vo.setContents(rs.getString("contents"));
				vo.setRegdate(rs.getString("regdate"));
				vo.setHits(rs.getInt("hits"));
				vo.setIp(rs.getString("ip"));
				vo.setStatus(rs.getInt("status"));
				list.add(vo);
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		close();
		return list;
	}
	// 1건 조회
	public BoardVO getOne(int bno) {
		sb.setLength(0);
		sb.append("SELECT bno, writer, title, contents, regdate, hits, ip, status ");
		sb.append("FROM board ");
		sb.append("WHERE bno = ? ");
		BoardVO vo = new BoardVO();
		try {
			pstmt=conn.prepareStatement(sb.toString());
			pstmt.setInt(1, bno);
			rs=pstmt.executeQuery();
			if(rs.next()) {
				
				vo.setBno(rs.getInt("bno"));
				vo.setWriter(rs.getString("writer"));
				vo.setTitle(rs.getString("title"));
				vo.setContents(rs.getString("contents"));
				vo.setRegdate(rs.getString("regdate"));
				vo.setHits(rs.getInt("hits"));
				vo.setIp(rs.getString("ip"));
				vo.setStatus(rs.getInt("status"));				
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		close();
		return vo;
	}
	// 1건 추가
	public void addOne(BoardVO vo) {
		sb.setLength(0);
		sb.append("INSERT INTO board ");
		sb.append("VALUES(board_bno_seq.nextval, ?, ?, ?, SYSDATE, 0, ?, 1) ");
				
		try {
			pstmt=conn.prepareStatement(sb.toString());
			pstmt.setString(1, vo.getWriter());
			pstmt.setString(2, vo.getTitle());
			pstmt.setString(3, vo.getContents());
			pstmt.setString(4, vo.getIp());
			pstmt.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}	
		close();
	}
	// 1건 변경
	public void updateOne(BoardVO vo) {
		// 제목, 내용, 작성자만 변경
		sb.setLength(0);
		sb.append("UPDATE board ");
		sb.append("SET title = ?, writer = ?, contents = ? ");
		sb.append("WHERE bno = ? ");
		try {
			pstmt = conn.prepareStatement(sb.toString());
			pstmt.setString(1, vo.getTitle());
			pstmt.setString(2, vo.getWriter());
			pstmt.setString(3, vo.getContents());
			pstmt.setInt(4, vo.getBno());
			pstmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		close();
	}
	// 1건 삭제
	public void deleteOne(int bno) {
		//게시물번호로 게시물 삭제
		sb.setLength(0);
		sb.append("DELETE FROM board ");		
		sb.append("WHERE bno = ? ");
		try {
			pstmt = conn.prepareStatement(sb.toString());
			pstmt.setInt(1, bno);
			pstmt.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		close();
	}
	
	public void close() {
		try {
			if(rs!=null)rs.close();
			if(pstmt!=null)pstmt.close();
			if(conn!=null)conn.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	

}
